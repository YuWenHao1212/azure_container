[pytest]
# Pytest configuration for precommit tests

# Test discovery
testpaths = test/unit test/integration
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    precommit: mark test for precommit execution
    timeout: set timeout for individual tests
    p0: Priority 0 (critical) tests
    p1: Priority 1 (important) tests
    p2: Priority 2 (minor) tests
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests

# Default options for precommit
addopts = 
    # Verbose output with short traceback
    -v --tb=short
    
    # No coverage during precommit (for speed)
    --no-cov
    
    # Stop on first failure
    --maxfail=1
    
    # Parallel execution
    -n auto
    
    # Default timeout
    --timeout=2
    
    # Show warnings
    -W ignore::DeprecationWarning
    -W ignore::PendingDeprecationWarning
    
    # Output format
    --color=yes
    
    # Report slowest tests
    --durations=10

# Timeout settings
timeout = 2
timeout_method = thread

# Output settings
console_output_style = progress

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test report paths
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = true

# Ignore patterns
norecursedirs = .git .tox dist build *.egg __pycache__ logs reports scripts

# Warning filters specific to our project
filterwarnings =
    ignore::DeprecationWarning:pydantic
    ignore::DeprecationWarning:fastapi
    ignore::UserWarning:pytest_asyncio

# Asyncio settings
asyncio_mode = auto

# Parallel execution settings
# Use number of CPU cores for parallel execution
# Disable in CI/CD if needed with -n 0
addopts_ci = -n 0